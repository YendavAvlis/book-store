// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using book_store.Data;

namespace book_store.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("book_store.Data.DTOs.Book", b =>
                {
                    b.Property<Guid>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BookId");

                    b.HasIndex("BookCategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = new Guid("3d04ccba-9eac-b2ea-bcf3-85feaaedabc0"),
                            BookCategoryId = new Guid("2efa4bdf-35ad-cdab-42da-ed09edc1aecb"),
                            Description = "dkjvbksdvlansdl",
                            ISBN = "123456",
                            Name = "The New Book",
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = new Guid("3d04ccba-9eac-b2ea-bcf3-95feaaedabc9"),
                            BookCategoryId = new Guid("1eab193f-a3ed-cab0-43af-094bb24f24ce"),
                            Description = "dfsdpasdad",
                            ISBN = "8429825",
                            Name = "The Other Book",
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = new Guid("3d04ccba-9eac-b2ea-bcf3-95feaaedabc6"),
                            BookCategoryId = new Guid("3d04ccba-9eac-b2ea-bcf3-95feaaedabc4"),
                            Description = "sdaknvsdioa",
                            ISBN = "25764587",
                            Name = "The Life Book",
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("book_store.Data.DTOs.BookCategory", b =>
                {
                    b.Property<Guid>("BookCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookCategoryId");

                    b.ToTable("BookCategories");

                    b.HasData(
                        new
                        {
                            BookCategoryId = new Guid("1eab193f-a3ed-cab0-43af-094bb24f24ce"),
                            Name = "Fiction"
                        },
                        new
                        {
                            BookCategoryId = new Guid("2efa4bdf-35ad-cdab-42da-ed09edc1aecb"),
                            Name = "Thriller"
                        },
                        new
                        {
                            BookCategoryId = new Guid("3d04ccba-9eac-b2ea-bcf3-95feaaedabc4"),
                            Name = "Sci-Fi"
                        });
                });

            modelBuilder.Entity("book_store.Data.DTOs.Book", b =>
                {
                    b.HasOne("book_store.Data.DTOs.BookCategory", "BookCategory")
                        .WithMany()
                        .HasForeignKey("BookCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
